module example

type A {
   A
}

effect state<a> {
   fun get() : a
   fun set(a) : unit
}

fun test() : state<i32> unit {
   val a = get<i32>()
   set(a+1)
}

fun test2(a:i32) : i32 {
   a + 1
}

fun main() : io unit {
  var a = 0
  // handle state<i32> {
  //    test()
  // } with {
  //    fun get() {
  //       resume(a)
  //    }
  //    fun set(v:i32) {
  //       a = v
  //       resume(unit)
  //    }
  // }
  while a < 10 {
    print(a)
    a = a + 1
  }
  print(test2(a))
  val f = fn () : i32 { a + 1 }
  f()
  unit
}

