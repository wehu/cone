module data/tensor

// tensor types

type tensor<t, shape:@[num]>

fun full<shape: @[num], a>(c : a) : tensor<a, shape>

fun matmul<n:num, k:num, m:num, a>(lhs : tensor<a, @[n, k]>, rhs : tensor<a, @[k, m]>) : tensor<a, @[n, m]>

fun convolve_full<n:num, m:num, a>(lhs : tensor<a, @[n]>, rhs : tensor <a, @[m]>) : tensor<a, @[n+m-1]>

fun convolve_same<n:num, m:num, a>(lhs : tensor<a, @[n]>, rhs : tensor <a, @[m]>) : tensor<a, @[max<n,m>]>

fun convolve_valid<n:num, m:num, a>(lhs : tensor<a, @[n]>, rhs : tensor <a, @[m]>) : tensor<a, @[max<n,m> - min<n,m> + 1]>