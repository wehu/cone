module data/list

fun reverse<a>(l : list<a>) : list<a> {
  var rest = l
  var newl = nil<a>
  while (rest != nil<a>) {
    val e|r = rest
    rest = r
    newl = e|newl
  }
  newl
}

fun map<a, b>[e](l : list<a>, f : (a) -> e b) : e list<b> {
  if l == nil<a> {
    nil<b>
  } else {
    val e|r = l
    f(e)|map(r, f)
  }
}