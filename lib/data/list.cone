module data.list

fun reverse<a>(l : list<a>) : list<a> {
    var rest = l
    var newl = []
    while (rest != []) {
        val e|r = rest
        rest = r
        newl = e|newl
    }
    newl
}

fun map<a, b>[e](l : list<a>, f : (a) -> e b) : e list<b> {
    if l == [] {
        []
    } else {
        val e|r = l
        f(e)|map(r, f)
    }
}

fun length<a>(l : list<a>) : i32 {
    if l == [] {
        0
    } else {
        val e|r = l
        1 + length(r)
    }
}