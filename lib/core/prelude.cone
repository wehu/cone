module core.prelude

// builtin functions

fun ____negative<a>(a: a) : a

fun ____add<a>(a: a, b:a) : a 

fun ____sub<a>(a: a, b:a) : a 

fun ____mul<a>(a: a, b:a) : a

fun ____div<a>(a: a, b:a) : a

fun ____mod<a>(a: a, b:a) : a

fun ____lt<a>(a: a, b:a) : bool

fun ____gt<a>(a: a, b:a) : bool 

fun ____le<a>(a: a, b:a) : bool 

fun ____ge<a>(a: a, b:a) : bool 

fun ____eq<a>(a: a, b:a) : bool

fun ____ne<a>(a: a, b:a) : bool 

fun ____not<a>(a: bool) : bool 

fun ____and<a>(a: bool, b:bool) : bool

fun ____or<a>(a: bool, b:bool) : bool 

fun ____assign<a>(a: a, b:a) : unit 

// builtin types

type neg<a:num>

type add<a:num, a:num>

type sub<a:num, a:num>

type mul<a:num, a:num>

type div<a:num, a:num>

type mod<a:num, a:num>

type max<a:num, a:num>

type min<a:num, a:num>

type list<a> {
  nil
  cons(a, list<a>)
}

type pair<a, b> {
  pair(a, b)
}

// inline python

fun inline_python<a>(code:str) : a

// python effect

effect python {
  fun run_python<a>(str) : a
}

// io effect
effect io {
  fun print<a>(a) : unit
}
