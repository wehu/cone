module core/prelude

// builtin functions

fun inline_python<a>(code:str) : a

fun negative<a>(a: a) : a

fun add<a>(a: a, b:a) : a 

fun sub<a>(a: a, b:a) : a 

fun mul<a>(a: a, b:a) : a

fun div<a>(a: a, b:a) : a

fun mod<a>(a: a, b:a) : a

fun lt<a>(a: a, b:a) : bool

fun gt<a>(a: a, b:a) : bool 

fun le<a>(a: a, b:a) : bool 

fun ge<a>(a: a, b:a) : bool 

fun eq<a>(a: a, b:a) : bool

fun ne<a>(a: a, b:a) : bool 

fun not<a>(a: bool) : bool 

fun and<a>(a: bool, b:bool) : bool

fun or<a>(a: bool, b:bool) : bool 

fun ____assign<a>(a: a, b:a) : unit 

// builtin types

type add<a:num, a:num>

type sub<a:num, a:num>

type mul<a:num, a:num>

type div<a:num, a:num>

type mod<a:num, a:num>

type max<a:num, a:num>

type min<a:num, a:num>

type list<a> {
  nil
  cons(a, list<a>)
}

type pair<a, b> {
  pair(a, b)
}

// tensor types

type tensor<t, shape:@[num]> {
  tensor
}

// python effect

effect python {
  fun run_python<a>(str) : a
}

// io effect
effect io {
  fun print<a>(a) : unit
}

// state effect
effect state<a> {
   fun get() : a
   fun set(a) : unit
}

// nodet effect
effect nodet<a> {
  fun branch(a) : bool
}
