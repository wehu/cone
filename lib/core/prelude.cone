module core/prelude

// builtin functions

fun inline_python<a>(code:str) : a

fun ____add<a>(a: a, b:a) : a {
  inline_python<a>("(a + b)")
}

fun ____sub<a>(a: a, b:a) : a {
  inline_python<a>("(a - b)")
}

fun ____mul<a>(a: a, b:a) : a {
  inline_python<a>("(a * b)")
}

fun ____div<a>(a: a, b:a) : a {
  inline_python<a>("(a / b)")
}

fun ____mod<a>(a: a, b:a) : a {
  inline_python<a>("(a % b)")
}

fun ____lt<a>(a: a, b:a) : bool {
  inline_python<a>("(a < b)")
}

fun ____gt<a>(a: a, b:a) : bool {
  inline_python<a>("(a > b)")
}

fun ____le<a>(a: a, b:a) : bool {
  inline_python<a>("(a <= b)")
}

fun ____ge<a>(a: a, b:a) : bool {
  inline_python<a>("(a >= b)")
}

fun ____eq<a>(a: a, b:a) : bool {
  inline_python<a>("(a == b)")
}

fun ____ne<a>(a: a, b:a) : bool {
  inline_python<a>("(a != b)")
}

fun ____not<a>(a: bool) : bool {
  inline_python<a>("(not a)")
}

fun ____and<a>(a: bool, b:bool) : bool {
  inline_python<a>("(a and b)")
}

fun ____or<a>(a: bool, b:bool) : bool {
  inline_python<a>("(a or b)")
}

fun ____assign<a>(a: a, b:a) : a {
  inline_python<a>("a = b")
}

// builtin types

type ____add<a, a>

type ____sub<a, a>

type ____mul<a, a>

type ____div<a, a>

type ____mod<a, a>

type ____pair<a, b>

type max<a, a>

type min<a, a>

// tensor types

type tensor<t, shape> {
  tensor
}

// python effect

effect python<a> {
  fun run_python(str) : a
}

effect io<a> {
  fun print(a) : unit
}